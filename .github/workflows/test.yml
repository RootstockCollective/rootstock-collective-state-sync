name: Test & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggers

# Restrict permissions to minimum required
permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    # Explicitly set job permissions
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    strategy:
      matrix:
        node-version: [22.x]
            
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Verify package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "Error: package-lock.json not found"
            exit 1
          fi
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Audit dependencies
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Generate coverage report
        if: matrix.node-version == '22.x'
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        if: matrix.node-version == '22.x'
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          disable_search: true
          verbose: false
      
      - name: Upload coverage artifacts
        if: matrix.node-version == '22.x'
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
          if-no-files-found: error
      
      - name: Comment PR with coverage
        if: github.event_name == 'pull_request' && matrix.node-version == '22.x'
        uses: romeovs/lcov-reporter-action@25674467b99fc58cc7706dc246d9647a94b5ba8f # v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test
    
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      
      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '22.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Build project
        run: npm run build
      
      - name: Check build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not created"
            exit 1
          fi
          echo "Build successful, dist directory created"
          # Verify no sensitive files in dist
          if find dist -name "*.env*" -o -name "*secret*" -o -name "*key*" | grep -q .; then
            echo "Error: Sensitive files found in dist"
            exit 1
          fi

